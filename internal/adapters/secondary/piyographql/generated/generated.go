// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package generated

import (
	"context"
	"encoding/json"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// サンプル作成の入力
type CreateSampleInput struct {
	// 文字列値
	StringVal string `json:"stringVal"`
	// 整数値
	IntVal int `json:"intVal"`
	// 文字列配列
	ArrayVal []string `json:"arrayVal"`
	// メールアドレス
	Email string `json:"email"`
}

// GetStringVal returns CreateSampleInput.StringVal, and is useful for accessing the field via an interface.
func (v *CreateSampleInput) GetStringVal() string { return v.StringVal }

// GetIntVal returns CreateSampleInput.IntVal, and is useful for accessing the field via an interface.
func (v *CreateSampleInput) GetIntVal() int { return v.IntVal }

// GetArrayVal returns CreateSampleInput.ArrayVal, and is useful for accessing the field via an interface.
func (v *CreateSampleInput) GetArrayVal() []string { return v.ArrayVal }

// GetEmail returns CreateSampleInput.Email, and is useful for accessing the field via an interface.
func (v *CreateSampleInput) GetEmail() string { return v.Email }

// CreateSampleMutationCreateSampleCreateSamplePayload includes the requested fields of the GraphQL type CreateSamplePayload.
// The GraphQL type's documentation follows.
//
// サンプル作成のレスポンス
type CreateSampleMutationCreateSampleCreateSamplePayload struct {
	// 作成されたサンプル
	Sample CreateSampleMutationCreateSampleCreateSamplePayloadSample `json:"sample"`
}

// GetSample returns CreateSampleMutationCreateSampleCreateSamplePayload.Sample, and is useful for accessing the field via an interface.
func (v *CreateSampleMutationCreateSampleCreateSamplePayload) GetSample() CreateSampleMutationCreateSampleCreateSamplePayloadSample {
	return v.Sample
}

// CreateSampleMutationCreateSampleCreateSamplePayloadSample includes the requested fields of the GraphQL type Sample.
type CreateSampleMutationCreateSampleCreateSamplePayloadSample struct {
	SampleFields `json:"-"`
}

// GetId returns CreateSampleMutationCreateSampleCreateSamplePayloadSample.Id, and is useful for accessing the field via an interface.
func (v *CreateSampleMutationCreateSampleCreateSamplePayloadSample) GetId() string {
	return v.SampleFields.Id
}

// GetStringVal returns CreateSampleMutationCreateSampleCreateSamplePayloadSample.StringVal, and is useful for accessing the field via an interface.
func (v *CreateSampleMutationCreateSampleCreateSamplePayloadSample) GetStringVal() string {
	return v.SampleFields.StringVal
}

// GetIntVal returns CreateSampleMutationCreateSampleCreateSamplePayloadSample.IntVal, and is useful for accessing the field via an interface.
func (v *CreateSampleMutationCreateSampleCreateSamplePayloadSample) GetIntVal() int {
	return v.SampleFields.IntVal
}

// GetArrayVal returns CreateSampleMutationCreateSampleCreateSamplePayloadSample.ArrayVal, and is useful for accessing the field via an interface.
func (v *CreateSampleMutationCreateSampleCreateSamplePayloadSample) GetArrayVal() []string {
	return v.SampleFields.ArrayVal
}

// GetEmail returns CreateSampleMutationCreateSampleCreateSamplePayloadSample.Email, and is useful for accessing the field via an interface.
func (v *CreateSampleMutationCreateSampleCreateSamplePayloadSample) GetEmail() string {
	return v.SampleFields.Email
}

// GetCreatedAt returns CreateSampleMutationCreateSampleCreateSamplePayloadSample.CreatedAt, and is useful for accessing the field via an interface.
func (v *CreateSampleMutationCreateSampleCreateSamplePayloadSample) GetCreatedAt() time.Time {
	return v.SampleFields.CreatedAt
}

// GetUpdatedAt returns CreateSampleMutationCreateSampleCreateSamplePayloadSample.UpdatedAt, and is useful for accessing the field via an interface.
func (v *CreateSampleMutationCreateSampleCreateSamplePayloadSample) GetUpdatedAt() time.Time {
	return v.SampleFields.UpdatedAt
}

func (v *CreateSampleMutationCreateSampleCreateSamplePayloadSample) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateSampleMutationCreateSampleCreateSamplePayloadSample
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateSampleMutationCreateSampleCreateSamplePayloadSample = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.SampleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateSampleMutationCreateSampleCreateSamplePayloadSample struct {
	Id string `json:"id"`

	StringVal string `json:"stringVal"`

	IntVal int `json:"intVal"`

	ArrayVal []string `json:"arrayVal"`

	Email string `json:"email"`

	CreatedAt time.Time `json:"createdAt"`

	UpdatedAt time.Time `json:"updatedAt"`
}

func (v *CreateSampleMutationCreateSampleCreateSamplePayloadSample) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateSampleMutationCreateSampleCreateSamplePayloadSample) __premarshalJSON() (*__premarshalCreateSampleMutationCreateSampleCreateSamplePayloadSample, error) {
	var retval __premarshalCreateSampleMutationCreateSampleCreateSamplePayloadSample

	retval.Id = v.SampleFields.Id
	retval.StringVal = v.SampleFields.StringVal
	retval.IntVal = v.SampleFields.IntVal
	retval.ArrayVal = v.SampleFields.ArrayVal
	retval.Email = v.SampleFields.Email
	retval.CreatedAt = v.SampleFields.CreatedAt
	retval.UpdatedAt = v.SampleFields.UpdatedAt
	return &retval, nil
}

// CreateSampleMutationResponse is returned by CreateSampleMutation on success.
type CreateSampleMutationResponse struct {
	// サンプルの作成
	CreateSample CreateSampleMutationCreateSampleCreateSamplePayload `json:"createSample"`
}

// GetCreateSample returns CreateSampleMutationResponse.CreateSample, and is useful for accessing the field via an interface.
func (v *CreateSampleMutationResponse) GetCreateSample() CreateSampleMutationCreateSampleCreateSamplePayload {
	return v.CreateSample
}

// ListSampleQueryListSample includes the requested fields of the GraphQL type Sample.
type ListSampleQueryListSample struct {
	SampleFields `json:"-"`
}

// GetId returns ListSampleQueryListSample.Id, and is useful for accessing the field via an interface.
func (v *ListSampleQueryListSample) GetId() string { return v.SampleFields.Id }

// GetStringVal returns ListSampleQueryListSample.StringVal, and is useful for accessing the field via an interface.
func (v *ListSampleQueryListSample) GetStringVal() string { return v.SampleFields.StringVal }

// GetIntVal returns ListSampleQueryListSample.IntVal, and is useful for accessing the field via an interface.
func (v *ListSampleQueryListSample) GetIntVal() int { return v.SampleFields.IntVal }

// GetArrayVal returns ListSampleQueryListSample.ArrayVal, and is useful for accessing the field via an interface.
func (v *ListSampleQueryListSample) GetArrayVal() []string { return v.SampleFields.ArrayVal }

// GetEmail returns ListSampleQueryListSample.Email, and is useful for accessing the field via an interface.
func (v *ListSampleQueryListSample) GetEmail() string { return v.SampleFields.Email }

// GetCreatedAt returns ListSampleQueryListSample.CreatedAt, and is useful for accessing the field via an interface.
func (v *ListSampleQueryListSample) GetCreatedAt() time.Time { return v.SampleFields.CreatedAt }

// GetUpdatedAt returns ListSampleQueryListSample.UpdatedAt, and is useful for accessing the field via an interface.
func (v *ListSampleQueryListSample) GetUpdatedAt() time.Time { return v.SampleFields.UpdatedAt }

func (v *ListSampleQueryListSample) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*ListSampleQueryListSample
		graphql.NoUnmarshalJSON
	}
	firstPass.ListSampleQueryListSample = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.SampleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalListSampleQueryListSample struct {
	Id string `json:"id"`

	StringVal string `json:"stringVal"`

	IntVal int `json:"intVal"`

	ArrayVal []string `json:"arrayVal"`

	Email string `json:"email"`

	CreatedAt time.Time `json:"createdAt"`

	UpdatedAt time.Time `json:"updatedAt"`
}

func (v *ListSampleQueryListSample) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *ListSampleQueryListSample) __premarshalJSON() (*__premarshalListSampleQueryListSample, error) {
	var retval __premarshalListSampleQueryListSample

	retval.Id = v.SampleFields.Id
	retval.StringVal = v.SampleFields.StringVal
	retval.IntVal = v.SampleFields.IntVal
	retval.ArrayVal = v.SampleFields.ArrayVal
	retval.Email = v.SampleFields.Email
	retval.CreatedAt = v.SampleFields.CreatedAt
	retval.UpdatedAt = v.SampleFields.UpdatedAt
	return &retval, nil
}

// ListSampleQueryResponse is returned by ListSampleQuery on success.
type ListSampleQueryResponse struct {
	// サンプルのリスト取得
	ListSample []ListSampleQueryListSample `json:"listSample"`
}

// GetListSample returns ListSampleQueryResponse.ListSample, and is useful for accessing the field via an interface.
func (v *ListSampleQueryResponse) GetListSample() []ListSampleQueryListSample { return v.ListSample }

// SampleFields includes the GraphQL fields of Sample requested by the fragment SampleFields.
type SampleFields struct {
	// サンプルの一意識別子
	Id string `json:"id"`
	// 文字列値
	StringVal string `json:"stringVal"`
	// 整数値
	IntVal int `json:"intVal"`
	// 文字列配列
	ArrayVal []string `json:"arrayVal"`
	// メールアドレス
	Email string `json:"email"`
	// 作成日時
	CreatedAt time.Time `json:"createdAt"`
	// 更新日時
	UpdatedAt time.Time `json:"updatedAt"`
}

// GetId returns SampleFields.Id, and is useful for accessing the field via an interface.
func (v *SampleFields) GetId() string { return v.Id }

// GetStringVal returns SampleFields.StringVal, and is useful for accessing the field via an interface.
func (v *SampleFields) GetStringVal() string { return v.StringVal }

// GetIntVal returns SampleFields.IntVal, and is useful for accessing the field via an interface.
func (v *SampleFields) GetIntVal() int { return v.IntVal }

// GetArrayVal returns SampleFields.ArrayVal, and is useful for accessing the field via an interface.
func (v *SampleFields) GetArrayVal() []string { return v.ArrayVal }

// GetEmail returns SampleFields.Email, and is useful for accessing the field via an interface.
func (v *SampleFields) GetEmail() string { return v.Email }

// GetCreatedAt returns SampleFields.CreatedAt, and is useful for accessing the field via an interface.
func (v *SampleFields) GetCreatedAt() time.Time { return v.CreatedAt }

// GetUpdatedAt returns SampleFields.UpdatedAt, and is useful for accessing the field via an interface.
func (v *SampleFields) GetUpdatedAt() time.Time { return v.UpdatedAt }

// SampleQueryResponse is returned by SampleQuery on success.
type SampleQueryResponse struct {
	// IDによるサンプルの取得
	Sample SampleQuerySample `json:"sample"`
}

// GetSample returns SampleQueryResponse.Sample, and is useful for accessing the field via an interface.
func (v *SampleQueryResponse) GetSample() SampleQuerySample { return v.Sample }

// SampleQuerySample includes the requested fields of the GraphQL type Sample.
type SampleQuerySample struct {
	SampleFields `json:"-"`
}

// GetId returns SampleQuerySample.Id, and is useful for accessing the field via an interface.
func (v *SampleQuerySample) GetId() string { return v.SampleFields.Id }

// GetStringVal returns SampleQuerySample.StringVal, and is useful for accessing the field via an interface.
func (v *SampleQuerySample) GetStringVal() string { return v.SampleFields.StringVal }

// GetIntVal returns SampleQuerySample.IntVal, and is useful for accessing the field via an interface.
func (v *SampleQuerySample) GetIntVal() int { return v.SampleFields.IntVal }

// GetArrayVal returns SampleQuerySample.ArrayVal, and is useful for accessing the field via an interface.
func (v *SampleQuerySample) GetArrayVal() []string { return v.SampleFields.ArrayVal }

// GetEmail returns SampleQuerySample.Email, and is useful for accessing the field via an interface.
func (v *SampleQuerySample) GetEmail() string { return v.SampleFields.Email }

// GetCreatedAt returns SampleQuerySample.CreatedAt, and is useful for accessing the field via an interface.
func (v *SampleQuerySample) GetCreatedAt() time.Time { return v.SampleFields.CreatedAt }

// GetUpdatedAt returns SampleQuerySample.UpdatedAt, and is useful for accessing the field via an interface.
func (v *SampleQuerySample) GetUpdatedAt() time.Time { return v.SampleFields.UpdatedAt }

func (v *SampleQuerySample) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SampleQuerySample
		graphql.NoUnmarshalJSON
	}
	firstPass.SampleQuerySample = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.SampleFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSampleQuerySample struct {
	Id string `json:"id"`

	StringVal string `json:"stringVal"`

	IntVal int `json:"intVal"`

	ArrayVal []string `json:"arrayVal"`

	Email string `json:"email"`

	CreatedAt time.Time `json:"createdAt"`

	UpdatedAt time.Time `json:"updatedAt"`
}

func (v *SampleQuerySample) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SampleQuerySample) __premarshalJSON() (*__premarshalSampleQuerySample, error) {
	var retval __premarshalSampleQuerySample

	retval.Id = v.SampleFields.Id
	retval.StringVal = v.SampleFields.StringVal
	retval.IntVal = v.SampleFields.IntVal
	retval.ArrayVal = v.SampleFields.ArrayVal
	retval.Email = v.SampleFields.Email
	retval.CreatedAt = v.SampleFields.CreatedAt
	retval.UpdatedAt = v.SampleFields.UpdatedAt
	return &retval, nil
}

// __CreateSampleMutationInput is used internally by genqlient
type __CreateSampleMutationInput struct {
	Input CreateSampleInput `json:"input"`
}

// GetInput returns __CreateSampleMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateSampleMutationInput) GetInput() CreateSampleInput { return v.Input }

// __ListSampleQueryInput is used internally by genqlient
type __ListSampleQueryInput struct {
	Offset int `json:"offset"`
	Limit  int `json:"limit"`
}

// GetOffset returns __ListSampleQueryInput.Offset, and is useful for accessing the field via an interface.
func (v *__ListSampleQueryInput) GetOffset() int { return v.Offset }

// GetLimit returns __ListSampleQueryInput.Limit, and is useful for accessing the field via an interface.
func (v *__ListSampleQueryInput) GetLimit() int { return v.Limit }

// __SampleQueryInput is used internally by genqlient
type __SampleQueryInput struct {
	Id string `json:"id"`
}

// GetId returns __SampleQueryInput.Id, and is useful for accessing the field via an interface.
func (v *__SampleQueryInput) GetId() string { return v.Id }

// The query or mutation executed by CreateSampleMutation.
const CreateSampleMutation_Operation = `
mutation CreateSampleMutation ($input: CreateSampleInput!) {
	createSample(input: $input) {
		sample {
			... SampleFields
		}
	}
}
fragment SampleFields on Sample {
	id
	stringVal
	intVal
	arrayVal
	email
	createdAt
	updatedAt
}
`

func CreateSampleMutation(
	ctx_ context.Context,
	client_ graphql.Client,
	input CreateSampleInput,
) (*CreateSampleMutationResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateSampleMutation",
		Query:  CreateSampleMutation_Operation,
		Variables: &__CreateSampleMutationInput{
			Input: input,
		},
	}
	var err_ error

	var data_ CreateSampleMutationResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ListSampleQuery.
const ListSampleQuery_Operation = `
query ListSampleQuery ($offset: Int!, $limit: Int!) {
	listSample(offset: $offset, limit: $limit) {
		... SampleFields
	}
}
fragment SampleFields on Sample {
	id
	stringVal
	intVal
	arrayVal
	email
	createdAt
	updatedAt
}
`

func ListSampleQuery(
	ctx_ context.Context,
	client_ graphql.Client,
	offset int,
	limit int,
) (*ListSampleQueryResponse, error) {
	req_ := &graphql.Request{
		OpName: "ListSampleQuery",
		Query:  ListSampleQuery_Operation,
		Variables: &__ListSampleQueryInput{
			Offset: offset,
			Limit:  limit,
		},
	}
	var err_ error

	var data_ ListSampleQueryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by SampleQuery.
const SampleQuery_Operation = `
query SampleQuery ($id: ID!) {
	sample(id: $id) {
		... SampleFields
	}
}
fragment SampleFields on Sample {
	id
	stringVal
	intVal
	arrayVal
	email
	createdAt
	updatedAt
}
`

func SampleQuery(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*SampleQueryResponse, error) {
	req_ := &graphql.Request{
		OpName: "SampleQuery",
		Query:  SampleQuery_Operation,
		Variables: &__SampleQueryInput{
			Id: id,
		},
	}
	var err_ error

	var data_ SampleQueryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
